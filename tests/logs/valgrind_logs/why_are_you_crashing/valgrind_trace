==49413== Memcheck, a memory error detector
==49413== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==49413== Using Valgrind-3.16.0.GIT and LibVEX; rerun with -h for copyright info
==49413== Command: ./../ft_nm ../../nm-otool-test/fat/why_are_you_crashing
==49413== Parent PID: 49117
==49413== 
==49413== Conditional jump or move depends on uninitialised value(s)
==49413==    at 0x1000062A9: ft_strcmp (ft_strcmp.c:24)
==49413==    by 0x1000017C0: sort_names (main.c:160)
==49413==    by 0x100002919: parse_mach_64_symtab (macho64.c:119)
==49413==    by 0x1000031D6: handle_64 (macho64.c:278)
==49413==    by 0x10000199C: check_file (main.c:191)
==49413==    by 0x1000043C1: check_for_host_arch (fat32.c:133)
==49413==    by 0x10000475F: handle_fat_32 (fat32.c:190)
==49413==    by 0x100001A15: check_file (main.c:197)
==49413==    by 0x100001BA6: init_env (main.c:232)
==49413==    by 0x100000F73: main (ft_nm.c:24)
==49413== 
==49413== Conditional jump or move depends on uninitialised value(s)
==49413==    at 0x1000017C4: sort_names (main.c:160)
==49413==    by 0x100002919: parse_mach_64_symtab (macho64.c:119)
==49413==    by 0x1000031D6: handle_64 (macho64.c:278)
==49413==    by 0x10000199C: check_file (main.c:191)
==49413==    by 0x1000043C1: check_for_host_arch (fat32.c:133)
==49413==    by 0x10000475F: handle_fat_32 (fat32.c:190)
==49413==    by 0x100001A15: check_file (main.c:197)
==49413==    by 0x100001BA6: init_env (main.c:232)
==49413==    by 0x100000F73: main (ft_nm.c:24)
==49413== 
==49413== Conditional jump or move depends on uninitialised value(s)
==49413==    at 0x1000062A9: ft_strcmp (ft_strcmp.c:24)
==49413==    by 0x10000181B: sort_names (main.c:161)
==49413==    by 0x100002919: parse_mach_64_symtab (macho64.c:119)
==49413==    by 0x1000031D6: handle_64 (macho64.c:278)
==49413==    by 0x10000199C: check_file (main.c:191)
==49413==    by 0x1000043C1: check_for_host_arch (fat32.c:133)
==49413==    by 0x10000475F: handle_fat_32 (fat32.c:190)
==49413==    by 0x100001A15: check_file (main.c:197)
==49413==    by 0x100001BA6: init_env (main.c:232)
==49413==    by 0x100000F73: main (ft_nm.c:24)
==49413== 
==49413== Conditional jump or move depends on uninitialised value(s)
==49413==    at 0x10000181F: sort_names (main.c:161)
==49413==    by 0x100002919: parse_mach_64_symtab (macho64.c:119)
==49413==    by 0x1000031D6: handle_64 (macho64.c:278)
==49413==    by 0x10000199C: check_file (main.c:191)
==49413==    by 0x1000043C1: check_for_host_arch (fat32.c:133)
==49413==    by 0x10000475F: handle_fat_32 (fat32.c:190)
==49413==    by 0x100001A15: check_file (main.c:197)
==49413==    by 0x100001BA6: init_env (main.c:232)
==49413==    by 0x100000F73: main (ft_nm.c:24)
==49413== 
==49413== 
==49413== HEAP SUMMARY:
==49413==     in use at exit: 19,320 bytes in 168 blocks
==49413==   total heap usage: 597 allocs, 429 frees, 681,330 bytes allocated
==49413== 
==49413== LEAK SUMMARY:
==49413==    definitely lost: 0 bytes in 0 blocks
==49413==    indirectly lost: 0 bytes in 0 blocks
==49413==      possibly lost: 0 bytes in 0 blocks
==49413==    still reachable: 200 bytes in 6 blocks
==49413==         suppressed: 19,120 bytes in 162 blocks
==49413== Reachable blocks (those to which a pointer was found) are not shown.
==49413== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==49413== 
==49413== Use --track-origins=yes to see where uninitialised values come from
==49413== For lists of detected and suppressed errors, rerun with: -s
==49413== ERROR SUMMARY: 215728 errors from 4 contexts (suppressed: 434 from 37)
